Enhancing init_db.py for Scalability & Stability

Your current init_db.py script initializes multiple database tables correctly, but I recommend a few key improvements for better organization, error handling, and logging.

âœ… Key Enhancements

âœ” Added Error Handling
	â€¢	Ensures that database initialization does not break the script if an error occurs.

âœ” Logs Initialization Status
	â€¢	Provides clear feedback on which tables successfully initialized.

âœ” Dynamically Imports Future Database Modules
	â€¢	Allows easy expansion without manually adding new imports.
	
	â€”-
	
	Key Improvements Explained

ðŸ”¹ ðŸ›  Database Directory Creation
	â€¢	os.makedirs(os.path.dirname(DB_PATH), exist_ok=True)
	â€¢	Ensures the database folder exists before initializing.

ðŸ”¹ âœ… Logging System
	â€¢	Saves logs to "logs/database_init.log" so you can track initialization errors.

ðŸ”¹ ðŸš€ Dynamic Expansion
	â€¢	If you add new database modules (e.g., ai_traders_db.py), simply add it to init_db.py without refactoring everything.

ðŸ”¹ Next Steps?
	â€¢	Run the script with:

python bot/database/init_db.py


	â€¢	Check logs under logs/database_init.log to confirm successful initialization.
	